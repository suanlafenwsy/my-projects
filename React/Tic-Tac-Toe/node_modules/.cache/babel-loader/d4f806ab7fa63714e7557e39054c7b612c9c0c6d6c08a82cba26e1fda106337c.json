{"ast":null,"code":"var _jsxFileName = \"E:\\\\front_end_projects\\\\React\\\\Tic-Tac-Toe\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Square({\n  value,\n  onSquareClick\n}) {\n  // 需要从组件中渲染名为value的JS变量 而不是“value”这个词\n  // 要从JSX“转义到JS” 需要使用大括号\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: onSquareClick,\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n_c = Square;\nexport default function Board() {\n  _s();\n  const [xIsNext, setXIsNext] = useState(true);\n  // squares默认对应于9个方块的9个空值数组\n  // state对于定义它的组件是私有的 不能直接从Square更新Board的state\n  const [squares, setSquares] = useState(Array(9).fill(null));\n  function handleClick(i) {\n    if (squares[i] || calculateWinner(squares)) {\n      return;\n    }\n    const nextSquares = squares.slice();\n    if (xIsNext) {\n      nextSquares[i] = \"X\";\n    } else {\n      nextSquares[i] = \"O\";\n    }\n    // JS支持闭包 嵌套函数能访问在其外部作用域中声明的变量\n    setSquares(nextSquares);\n    setXIsNext(!xIsNext);\n  }\n  const winner = calculateWinner(squares);\n  let status;\n  if (winner) {\n    status = \"Winner: \" + winner;\n  } else {\n    status = \"Next player: \" + (xIsNext ? \"X\" : \"O\");\n  }\n  return (\n    /*#__PURE__*/\n    // React组件必须返回单个JSX元素 如果要返回多个\n    // 可以用<></>包裹多个相邻的JSX元素\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status\",\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [/*#__PURE__*/_jsxDEV(Square, {\n          value: squares[0],\n          onSquareClick: () => handleClick(0)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Square, {\n          value: squares[1],\n          onSquareClick: () => handleClick(1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Square, {\n          value: squares[2],\n          onSquareClick: () => handleClick(2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [/*#__PURE__*/_jsxDEV(Square, {\n          value: squares[3],\n          onSquareClick: () => handleClick(3)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Square, {\n          value: squares[4],\n          onSquareClick: () => handleClick(4)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Square, {\n          value: squares[5],\n          onSquareClick: () => handleClick(5)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [/*#__PURE__*/_jsxDEV(Square, {\n          value: squares[6],\n          onSquareClick: () => handleClick(6)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Square, {\n          value: squares[7],\n          onSquareClick: () => handleClick(7)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Square, {\n          value: squares[8],\n          onSquareClick: () => handleClick(8)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true)\n  );\n}\n_s(Board, \"coMecpjTzg1W7KUe5tSm+DrcByQ=\");\n_c2 = Board;\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\nvar _c, _c2;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Board\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Square","value","onSquareClick","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Board","_s","xIsNext","setXIsNext","squares","setSquares","Array","fill","handleClick","i","calculateWinner","nextSquares","slice","winner","status","_c2","lines","length","a","b","c","$RefreshReg$"],"sources":["E:/front_end_projects/React/Tic-Tac-Toe/src/App.js"],"sourcesContent":["import {useState} from 'react';\n\nfunction Square({value, onSquareClick}) {\n\n  // 需要从组件中渲染名为value的JS变量 而不是“value”这个词\n  // 要从JSX“转义到JS” 需要使用大括号\n  return(\n    <button\n      className=\"square\"\n      onClick={onSquareClick}\n    >\n        {value}\n    </button>\n  );\n}\n\nexport default function Board() {\n  const [xIsNext, setXIsNext] = useState(true);\n  // squares默认对应于9个方块的9个空值数组\n  // state对于定义它的组件是私有的 不能直接从Square更新Board的state\n  const [squares, setSquares] = useState(Array(9).fill(null));\n\n  function handleClick(i){\n    if (squares[i] || calculateWinner(squares)){\n      return;\n    }\n    const nextSquares = squares.slice();\n    if(xIsNext){\n      nextSquares[i] = \"X\";\n    } else{\n      nextSquares[i] = \"O\";\n    }\n    // JS支持闭包 嵌套函数能访问在其外部作用域中声明的变量\n    setSquares(nextSquares);\n    setXIsNext(!xIsNext);\n  }\n\n  const winner = calculateWinner(squares);\n  let status;\n  if(winner){\n    status = \"Winner: \" + winner;\n  } else{\n    status = \"Next player: \" + (xIsNext ? \"X\" : \"O\");\n  }\n\n  return(\n    // React组件必须返回单个JSX元素 如果要返回多个\n    // 可以用<></>包裹多个相邻的JSX元素\n    <>\n      <div className=\"status\">{status}</div>\n      <div className=\"board-row\">\n        <Square value={squares[0]} onSquareClick={ () => handleClick(0) }/>\n        <Square value={squares[1]} onSquareClick={ () => handleClick(1) }/>\n        <Square value={squares[2]} onSquareClick={ () => handleClick(2) }/>\n      </div>\n      <div className=\"board-row\">\n        <Square value={squares[3]} onSquareClick={ () => handleClick(3) }/>\n        <Square value={squares[4]} onSquareClick={ () => handleClick(4) }/>\n        <Square value={squares[5]} onSquareClick={ () => handleClick(5) }/>\n      </div>\n      <div className=\"board-row\">\n        <Square value={squares[6]} onSquareClick={ () => handleClick(6) }/>\n        <Square value={squares[7]} onSquareClick={ () => handleClick(7) }/>\n        <Square value={squares[8]} onSquareClick={ () => handleClick(8) }/>\n      </div>\n    </>\n  )\n}\n\n\nfunction calculateWinner(squares){\n  const lines = [\n    [0,1,2],\n    [3,4,5],\n    [6,7,8],\n    [0,3,6],\n    [1,4,7],\n    [2,5,8],\n    [0,4,8],\n    [2,4,6]\n  ];\n  for(let i = 0; i < lines.length; i++){\n    const [a,b,c] = lines[i];\n    if(squares[a] && squares[a] === squares[b] && squares[a] === squares[c]){\n      return squares[a];\n    }\n  }\n  return null;\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}